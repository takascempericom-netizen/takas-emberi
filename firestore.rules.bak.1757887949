rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isAdmin() { return isSignedIn() && request.auth.token.admin == true; }

    // users/{uid}
    match /users/{uid} {
      allow read: if true;
      allow create: if isOwner(uid);
      // username bir kez set edildiyse, admin dışında değiştirilemez
      allow update: if isOwner(uid) &&
                      (
                        !('username' in resource.data)
                        || request.resource.data.username == resource.data.username
                      )
                    || isAdmin();
      allow delete: if isOwner(uid) || isAdmin();
    }

    // usernames/{uname}  -- KODLA UYUMLU: { uid, at }
    match /usernames/{uname} {
      allow read: if true;
      allow create: if isSignedIn()
                    && !exists(/databases/$(database)/documents/usernames/$(uname))
                    && request.resource.data.uid == request.auth.uid
                    && request.resource.data.at is timestamp;
      allow update, delete: if false;
    }

    // listings/{id}  -- KODLA UYUMLU: ownerId, status, createdAt: timestamp
    match /listings/{id} {
      allow read: if resource.data.status == "active"
                  || (isSignedIn() && resource.data.ownerId == request.auth.uid)
                  || isAdmin();

      allow create: if isSignedIn()
                    && request.resource.data.ownerId == request.auth.uid
                    && request.resource.data.status in ["active","pending","expired"]
                    && request.resource.data.createdAt is timestamp;

      // ownerId değiştirilemez
      allow update: if (isSignedIn() && resource.data.ownerId == request.auth.uid) || isAdmin()
                    && request.resource.data.ownerId == resource.data.ownerId;

      allow delete: if (isSignedIn() && resource.data.ownerId == request.auth.uid) || isAdmin();
    }
  }
}
