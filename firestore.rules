rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isAdmin() {
      return isSignedIn() && (
        request.auth.token.admin == true ||
        (request.auth.token.role in ['admin','moderator','support'])
      );
    }
    // Geçici geliştirme penceresi (20 Eylül 2025'e kadar)
    function devWindow() { return request.time < timestamp.date(2025, 9, 20); }

    // İlanlar: herkes okuyabilir; yazma sahibi/admin
    match /listings/{id} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.ownerId) || isAdmin() || devWindow();
    }

    // Canlı destek/sohbet örneği (kendi path'ine göre düzenleyebilirsin)
    match /chats/{threadId}/{sub=**} {
      allow read, write:
        if (isSignedIn() && (
              request.auth.uid == resource.data.ownerId ||
              request.auth.uid == resource.data.buyerId
            )) || isAdmin() || devWindow();
    }

    // Admin alanı: okuma admin veya devWindow; yazma sadece admin
    match /admin/{doc=**} {
      allow read: if isAdmin() || devWindow();
      allow write: if isAdmin();
    }

    // Kullanıcı profilleri
    match /users/{uid} {
      allow read: if isSignedIn() && (request.auth.uid == uid || isAdmin() || devWindow());
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow update, delete: if request.auth.uid == uid || isAdmin() || devWindow();
    }

    // Diğer her şey: sadece devWindow’da okunabilir
    match /{document=**} {
      allow read: if devWindow();
    }
  }
}
